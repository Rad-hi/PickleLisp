(dll "raylib" "./thirdparty/raylib-5.5_linux_amd64/lib/libraylib.so")

( mktype "Color" {Char Char Char Char} )

( extern raylib "InitWindow" {Int Int String} {Void} )
( extern raylib "WindowShouldClose" {Void} {Int} )
( extern raylib "BeginDrawing" {Void} {Void} )
( extern raylib "EndDrawing" {Void} {Void} )
( extern raylib "CloseWindow" {Void} {Void} )
( extern raylib "SetTargetFPS" {Int} {Void} )
( extern raylib "ClearBackground" {Color} {Void} )
( extern raylib "DrawText" {String Int Int Int Color} {Void} )
( extern raylib "GetRandomValue" {Int Int} {Int} )

( def {ZOZINGRAY}   (list 22 22 22 255) )
( def {RAYWHITE}    (list 245 245 245 255) )
( def {VIOLET}      (list 135 60 190 255) )
( def {PICKLEGREEN} (list 133 161 106 255) )
( def {MYPINK}      (list 189 88 110 255) )
( def {GOLD}        (list 255 203 0 255) )
( def {SKYBLUE}     (list 102 191 255 255) )

( def {FPS} 30 )
( def {title} "PcikleLisp RayLib Example - Wait screen" )
( def {win_width} 960 )
( def {win_height} 480 )

( def {font_sz} 32 )
( def {msg} "Hello, from PickleLisp!" )
( def {msg_len} ( len msg ) )
( def {viz_msg_len} (* (- msg_len 1) (/ font_sz 2)) )

( def {x} (/ (- win_width viz_msg_len ) 2) )
( def {y} (/ (- win_height font_sz) 2) )

( def {dx} 5)
( def {dy} 5)

( def {col_list} ( list MYPINK PICKLEGREEN SKYBLUE GOLD VIOLET ) )
( def {n_cols} ( len col_list ) )
( def {idx} 0 )


( fn { loop func } {

    if ( == ( func {} ) 1 )
    { nil }
    {
        ( BeginDrawing {} )
            ( ClearBackground ZOZINGRAY )

            ;; step x, and bound check. On every bound bounce, we change the color index randomly
            ( def {x} (+ x dx) )
            ( if ( or (>= (+ x viz_msg_len) win_width) (< x 0)) 
                { ( def {dx} (- dx) ) ( ( def {idx} ( GetRandomValue 0 (- n_cols 1) ) ) ) } 
                { nil } )

            ( def {y} (+ y dy) )
            ( if ( or (>= (+ y font_sz) win_height) (< y 0))
                { ( def {dy} (- dy) ) ( ( def {idx} ( GetRandomValue 0 (- n_cols 1) ) ) ) }
                { nil } )

            ( DrawText msg x y font_sz (nth idx col_list) )
            ;; ( print ( list dx dy) )
        ( EndDrawing {} )
        ( loop func )
    }
})


( InitWindow win_width win_height title )
( SetTargetFPS FPS )
( loop WindowShouldClose)
( CloseWindow {} )
